<?php
/**
 * IDocumentByFilterTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  ChannelEngine\Merchant\ApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * ChannelEngine Merchant API
 *
 * ChannelEngine API for merchants
 *
 * The version of the OpenAPI document: 2.18.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.8.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace ChannelEngine\Merchant\ApiClient\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * IDocumentByFilterTest Class Doc Comment
 *
 * @category    Class
 * @description IDocumentByFilter
 * @package     ChannelEngine\Merchant\ApiClient
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class IDocumentByFilterTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "IDocumentByFilter"
     */
    public function testIDocumentByFilter()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "channelId"
     */
    public function testPropertyChannelId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "globalChannelId"
     */
    public function testPropertyGlobalChannelId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "orderId"
     */
    public function testPropertyOrderId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "channelOrderNo"
     */
    public function testPropertyChannelOrderNo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "merchantOrderNo"
     */
    public function testPropertyMerchantOrderNo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fileName"
     */
    public function testPropertyFileName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "documentNo"
     */
    public function testPropertyDocumentNo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "source"
     */
    public function testPropertySource()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mediaType"
     */
    public function testPropertyMediaType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "isMerchantAcknowledged"
     */
    public function testPropertyIsMerchantAcknowledged()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "isFileDeleted"
     */
    public function testPropertyIsFileDeleted()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
